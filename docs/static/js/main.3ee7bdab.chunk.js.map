{"version":3,"sources":["component/map.tsx","hook/use-window-size.ts","App.tsx","index.tsx","../node_modules/kepler.gl/dist/localization sync /^/.//.*$"],"names":["Map","props","store","useStore","size","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","dispatch","addDataToMap","datasets","info","label","id","data","fixedData","mobileData","option","centerMap","readOnly","config","mapConfig","appName","mapboxApiAccessToken","process","App","className","reducers","combineReducers","keplerGl","keplerGlReducer","middlewares","taskMiddleware","createStore","applyMiddleware","ReactDOM","render","document","getElementById","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"wRAWaA,EAAM,SAACC,GAEhB,IAAMC,EAAQC,qBACRC,ECPmB,WAAM,MAGKC,mBAAyB,CAC3DC,WAAOC,EACPC,YAAQD,IALqB,mBAGxBE,EAHwB,KAGZC,EAHY,KA4B/B,OApBAC,qBAAU,WAER,SAASC,IAEPF,EAAc,CACZJ,MAAOO,OAAOC,WACdN,OAAQK,OAAOE,cAWnB,OANAF,OAAOG,iBAAiB,SAAUJ,GAGlCA,IAGO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IAEIH,EDrBMS,GAgCb,OA9BAP,qBAAU,WAENT,EAAMiB,SACFC,uBAAa,CACTC,SAAU,CACN,CACIC,KAAM,CACFC,MAAO,kCACPC,GAAI,4BAERC,KAAMC,GAEV,CACIJ,KAAM,CACFC,MAAO,mCACPC,GAAI,6BAERC,KAAME,IAGdC,OAAQ,CACJC,WAAW,EACXC,UAAU,GAEdC,OAAQC,OAGjB,CAAC9B,IAIA,cAAC,IAAD,CACIsB,GAAG,MACHS,QAAQ,iCACR3B,MAAOF,EAAKE,MACZE,OAAQJ,EAAKI,OACb0B,qBAAsBC,+FExCnBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCIAC,EAAWC,0BAAgB,CAC/BC,SAAUC,MAGNC,EAAc,CAACC,kBAGfzC,EAAQ0C,sBACVN,EATsB,GAWtBO,kBAAe,WAAf,EAAmBH,IAIvBI,IAASC,OACP,cAAC,WAAD,CAAU7C,MAAOA,EAAjB,SACI,cAAC,EAAD,MAGJ8C,SAASC,eAAe,U,qv8mFC9B1B,IAAIC,EAAM,CACT,KAAM,GACN,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,sBAAuB,IACvB,yBAA0B,IAC1B,UAAW,GACX,aAAc,GACd,YAAa,IACb,eAAgB,IAChB,OAAQ,IACR,UAAW,KAIZ,SAASC,EAAeC,GACvB,IAAI5B,EAAK6B,EAAsBD,GAC/B,OAAOE,EAAoB9B,GAE5B,SAAS6B,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,EAEP,OAAON,EAAIE,GAEZD,EAAeQ,KAAO,WACrB,OAAOC,OAAOD,KAAKT,IAEpBC,EAAeU,QAAUR,EACzBS,EAAOC,QAAUZ,EACjBA,EAAe3B,GAAK,K","file":"static/js/main.3ee7bdab.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useStore } from 'react-redux';\nimport KeplerGl from 'kepler.gl';\nimport { addDataToMap } from 'kepler.gl/actions';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { useWindowSize } from '../hook';\n\nimport { default as mapConfig } from '../asset/keplerConfig.json';\nimport { default as fixedData } from '../asset/speedtest-fixed-tx.json';\nimport { default as mobileData } from '../asset/speedtest-mobile-tx.json';\n\nexport const Map = (props: any) => {\n    \n    const store = useStore();\n    const size = useWindowSize();\n\n    useEffect(() => { \n\n        store.dispatch(\n            addDataToMap({\n                datasets: [\n                    {\n                        info: {\n                            label: ' ATX Fixed Internet Speeds 2020',\n                            id: 'atx-internet-speed-fixed'\n                        },\n                        data: fixedData\n                    },\n                    {\n                        info: {\n                            label: ' ATX Mobile Internet Speeds 2020',\n                            id: 'atx-internet-speed-mobile'\n                        },\n                        data: mobileData\n                    }\n                ],\n                option: {\n                    centerMap: false,\n                    readOnly: false\n                },\n                config: mapConfig\n            })\n        );\n    }, [store]);\n\n\n    return (\n        <KeplerGl\n            id=\"map\"\n            appName=\"ATX Internet Speed/Latency Map\"\n            width={size.width}\n            height={size.height}\n            mapboxApiAccessToken={process.env.REACT_APP_MB}\n        />\n    );\n};","import { useState, useEffect } from 'react';\n\ntype WindowSizeType = {\n  readonly height: number | undefined;\n  readonly width: number | undefined;\n};\n\nexport const useWindowSize = () => {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState<WindowSizeType>({\n      width: undefined,\n      height: undefined,\n    });\n  \n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n      \n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n      \n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      \n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n  \n    return windowSize;\n  }","import React from 'react';\nimport './App.css';\nimport { Map } from './component';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { taskMiddleware } from 'react-palm/tasks';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport keplerGlReducer from 'kepler.gl/reducers';\nimport './index.css';\nimport App from './App';\n\n\nconst initialState: any = {};\nconst reducers = combineReducers({\n  keplerGl: keplerGlReducer\n});\n\nconst middlewares = [taskMiddleware];\n\n// using createStore\nconst store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(...middlewares)\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n","var map = {\n\t\"./\": 38,\n\t\"./ca\": 558,\n\t\"./ca.js\": 558,\n\t\"./en\": 403,\n\t\"./en.js\": 403,\n\t\"./es\": 559,\n\t\"./es.js\": 559,\n\t\"./fi\": 560,\n\t\"./fi.js\": 560,\n\t\"./formatted-message\": 404,\n\t\"./formatted-message.js\": 404,\n\t\"./index\": 38,\n\t\"./index.js\": 38,\n\t\"./locales\": 138,\n\t\"./locales.js\": 138,\n\t\"./pt\": 561,\n\t\"./pt.js\": 561\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 938;"],"sourceRoot":""}